Принцип подстановки Лисков (Liskov Substitution Principle, LSP) — это один из пяти принципов ООП (SOLID), предложенныхBarbara Liskov. Он утверждает, что объекты подтипов должны быть способны заменять объекты суперклассов без изменения желаемых свойств программы. Это означает, что если у вас есть класс, который использует базовый тип, вы должны иметь возможность передать ему экземпляр любого из подклассов этого типа, не нарушая корректность работы программы.
Пример использования принципа подстановки Лисков в Java:
Рассмотрим пример, связанный с геометрическими фигурами. У нас есть базовый класс Shape, а также два подкласса: Rectangle и Square. Хорошо, если наш квадрат будет также наследовать от прямоугольника, поскольку квадрат — это частный случай прямоугольника. Однако, это может привести к нарушению принципа подстановки Лисков.
В приведённом примере у нас есть общий класс Shape, который определяет метод (). Подкласс Rectangle реализует этот метод и имеет свойства ширины и высоты.
Класс Square наследует от Rectangle, но сразу же создаёт потенциальные проблемы. Когда мы устанавливаем ширину или высоту квадрата, это автоматически изменяет обе стороны, поскольку квадрат — это прямоугольник, у которого ширина и высота равны. Это требует от нас переопределять методы setWidth и setHeight, чтобы они изменяли обе стороны одновременно, что может привести к путанице.

Для предотвращения нарушений принципа подстановки Лисков, можно использовать интерфейсы или композицию вместо наследования. Например, можно создать интерфейс Shape, а прямоугольник и квадрат реализуют его, избегая прямого наследования друг от друга.